(function(s,e){typeof exports=="object"&&typeof module<"u"?e(require("@kinvolk/headlamp-plugin/lib"),require("react/jsx-runtime"),require("react"),require("@mui/material")):typeof define=="function"&&define.amd?define(["@kinvolk/headlamp-plugin/lib","react/jsx-runtime","react","@mui/material"],e):(s=typeof globalThis<"u"?globalThis:s||self,e(s.pluginLib,s.pluginLib.ReactJSX,s.pluginLib.React,s.pluginLib.MuiMaterial))})(this,function(s,e,x,t){"use strict";const c=(a=>a&&typeof a=="object"&&"default"in a?a:{default:a})(x),u="tcpdump-capture-ds",o="kubexm-capture",v="app=tcpdump-capture";function S(a,d){return{apiVersion:"apps/v1",kind:"DaemonSet",metadata:{name:u,namespace:o},spec:{selector:{matchLabels:{app:"tcpdump-capture"}},template:{metadata:{labels:{app:"tcpdump-capture"}},spec:{hostNetwork:!0,hostPID:!0,tolerations:[{key:"node-role.kubernetes.io/master",effect:"NoSchedule"},{key:"node-role.kubernetes.io/control-plane",effect:"NoSchedule"}],volumes:[{name:"capture-storage",hostPath:{path:"/tmp/captures",type:"DirectoryOrCreate"}}],containers:[{name:"tcpdump-container",image:d,command:["/bin/sh","-c"],args:[`echo 'Starting tcpdump on all interfaces (any) with filter: ${a}' && tcpdump -i any -s0 -w "/captures/\${NODE_NAME}.pcap" '${a}'`],env:[{name:"NODE_NAME",valueFrom:{fieldRef:{fieldPath:"spec.nodeName"}}}],volumeMounts:[{name:"capture-storage",mountPath:"/captures"}],securityContext:{privileged:!0}}]}}}}}function T(){const[a,d]=c.default.useState(!1),[n,p]=c.default.useState(!0),[h,l]=c.default.useState(null),[y,C]=c.default.useState(""),[g,P]=c.default.useState("registry.dev.rdev.tech:18093/headlamp/super-netshoot:2.0"),[k,b]=c.default.useState([]),f=`/apis/apps/v1/namespaces/${o}/daemonsets/${u}`,E=`/api/v1/namespaces/${o}`,m=`/api/v1/namespaces/${o}/pods?labelSelector=${v}`,i=c.default.useCallback(async()=>{p(!0),l(null);try{await s.ApiProxy.request(f),d(!0);const r=await s.ApiProxy.request(m);b(r.items||[])}catch(r){r.status===404?(d(!1),b([])):(console.error("Failed to check DaemonSet status:",r),l(`检查抓包工具状态失败: ${r.message||"未知错误"}`))}finally{p(!1)}},[f,m]);c.default.useEffect(()=>{i()},[i]);const w=async()=>{try{await s.ApiProxy.request(E)}catch(r){if(r.status===404){console.log(`Namespace ${o} not found, creating it...`);try{await s.ApiProxy.request("/api/v1/namespaces",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({apiVersion:"v1",kind:"Namespace",metadata:{name:o}})})}catch(N){throw new Error(`创建命名空间 ${o} 失败: ${N.message}`)}}else throw r}},D=async()=>{p(!0),l(null);try{await w();const r=S(y,g);await s.ApiProxy.request(`/apis/apps/v1/namespaces/${o}/daemonsets`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),setTimeout(i,2e3)}catch(r){console.error("Failed to start capture:",r),l(`启动抓包失败: ${r.message||"未知错误"}`),p(!1)}},A=async()=>{p(!0),l(null);try{await s.ApiProxy.request(f,{method:"DELETE"}),setTimeout(i,2e3)}catch(r){console.error("Failed to stop capture:",r),l(`停止抓包失败: ${r.message||"未知错误"}`),p(!1)}};return e.jsxs(t.Paper,{sx:{m:2,p:3},children:[e.jsx(t.Typography,{variant:"h4",gutterBottom:!0,children:"集群网络抓包工具"}),h&&e.jsx(t.Alert,{severity:"error",sx:{mb:2},children:h}),e.jsxs(t.Box,{sx:{p:2,border:"1px solid",borderColor:"divider",borderRadius:1,mb:4},children:[e.jsx(t.Typography,{variant:"h6",gutterBottom:!0,children:"控制面板"}),e.jsxs(t.Box,{children:[e.jsx(t.TextField,{label:"抓包镜像",fullWidth:!0,variant:"outlined",size:"small",value:g,onChange:r=>P(r.target.value),disabled:a||n,sx:{mb:2}}),e.jsxs(t.Box,{sx:{display:"flex",gap:2,alignItems:"center",flexWrap:"wrap"},children:[e.jsx(t.TextField,{label:"抓包过滤规则 (BPF Filter)",variant:"outlined",size:"small",value:y,onChange:r=>C(r.target.value),disabled:a||n,sx:{flexGrow:1,minWidth:"300px"}}),e.jsx(t.Button,{variant:"contained",color:a?"error":"primary",onClick:a?A:D,disabled:n,startIcon:n&&e.jsx(t.CircularProgress,{size:20,color:"inherit"}),children:n?a?"正在停止...":"正在启动...":a?"停止抓包":"开始抓包"})]})]})]}),e.jsxs(t.Box,{children:[e.jsx(t.Typography,{variant:"h6",gutterBottom:!0,children:"状态"}),n&&!h&&e.jsxs(t.Box,{sx:{display:"flex",alignItems:"center",mt:2},children:[e.jsx(t.CircularProgress,{size:24}),e.jsx(t.Typography,{sx:{ml:2},children:"正在加载状态..."})]}),!n&&(a?e.jsxs(e.Fragment,{children:[e.jsxs(t.Alert,{severity:"success",sx:{mb:2},children:["抓包正在进行中... DaemonSet '",u,"' 已在 ",e.jsx("strong",{children:o})," 命名空间部署。"]}),e.jsx(t.Typography,{variant:"subtitle1",gutterBottom:!0,children:"抓包文件说明"}),e.jsxs(t.Alert,{severity:"info",sx:{mb:2},children:["抓包文件 (.pcap) 被保存在 **每个节点** 的 ",e.jsx("strong",{children:"/tmp/captures/"})," 目录下。",e.jsx("br",{}),"文件名格式为: ",e.jsx("strong",{children:"[节点名称].pcap"}),"。",e.jsx("br",{}),"您需要通过 SSH 或 `kubectl cp` 登录到相应节点以获取文件。 例如: `kubectl cp ",o,"/[Pod名称] /captures/[节点名称].pcap ./[节点名称].pcap`"]}),e.jsx(t.Typography,{variant:"subtitle1",gutterBottom:!0,children:"抓包 Pod 状态"}),e.jsx(t.TableContainer,{component:t.Paper,variant:"outlined",children:e.jsxs(t.Table,{size:"small",children:[e.jsx(t.TableHead,{children:e.jsxs(t.TableRow,{children:[e.jsx(t.TableCell,{children:"Pod 名称"}),e.jsx(t.TableCell,{children:"所在节点"}),e.jsx(t.TableCell,{children:"状态"})]})}),e.jsx(t.TableBody,{children:k.map(r=>e.jsxs(t.TableRow,{children:[e.jsx(t.TableCell,{children:r.metadata.name}),e.jsx(t.TableCell,{children:r.spec.nodeName}),e.jsx(t.TableCell,{children:r.status.phase})]},r.metadata.uid))})]})})]}):e.jsx(t.Alert,{severity:"info",children:'抓包工具当前未运行。请配置参数后点击 "开始抓包"。'}))]})]})}s.registerSidebarEntry({parent:null,name:"tcpdump-capture",label:"kubexm网络抓包",url:"/tcpdump-capture",icon:"mdi:bug-outline"}),s.registerRoute({path:"/tcpdump-capture",sidebar:"tcpdump-capture",name:"tcpdump-capture",exact:!0,component:T})});
